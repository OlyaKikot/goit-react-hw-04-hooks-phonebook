{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","App.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactForm","state","name","number","onChange","event","setState","currentTarget","value","onSubmit","preventDefault","props","onFormSubmit","onChangeNumber","className","s","form","this","input","type","pattern","title","required","button","React","Component","Filter","text","filter","changeFilter","ContactListItem","contact","onDelete","container","item","id","onClick","target","ContactList","contacts","list","map","App","e","visibleContacts","toLowerCase","includes","trim","some","alert","prevState","nanoid","mainTitle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e28196a7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__21Ghq\",\"name\":\"ContactForm_name__1y3rq\",\"input\":\"ContactForm_input__jzQ9G\",\"button\":\"ContactForm_button__1zkPa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactListItem_button__3_nJQ\",\"container\":\"ContactListItem_container__2wBRZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Filter_text__1T5IP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainTitle\":\"App_mainTitle__ltbZ0\",\"title\":\"App_title__1rvVI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__29Ufb\"};","import React from \"react\";\nimport s from \"../ContactForm/ContactForm.module.css\";\n\nexport default class ContactForm extends React.Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  onChange = (event) => {\n    this.setState({ name: event.currentTarget.value });\n  };\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    this.props.onFormSubmit(this.state.name, this.state.number);\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  onChangeNumber = (event) => {\n    this.setState({ number: event.currentTarget.value });\n  };\n\n  render() {\n    return (\n      <>\n        <form className={s.form} onSubmit={this.onSubmit}>\n          <p className={s.name}>Name</p>\n          <input\n            className={s.input}\n            type=\"text\"\n            onChange={this.onChange}\n            value={this.state.name}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n          <p className={s.name}>Number</p>\n          <input\n            className={s.input}\n            type=\"tel\"\n            onChange={this.onChangeNumber}\n            name=\"number\"\n            value={this.state.number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n\n          <button className={s.button} type=\"onSubmit\">\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n","import PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nexport default function Filter(props) {\n  return (\n    <>\n      <p className={s.text}>Find contacts by name</p>\n      <input\n        className={s.input}\n        type=\"text\"\n        value={props.filter}\n        onChange={props.changeFilter}\n      ></input>\n    </>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport s from \"../ContactListItem/ContactListItem.module.css\";\nexport default function ContactListItem({ contact, onDelete }) {\n  return (\n    <div className={s.container}>\n      <li className={s.item}>\n        {contact.name}: {contact.number}\n      </li>\n      <button\n        className={s.button}\n        id={contact.id}\n        type=\"button\"\n        onClick={(event) => onDelete(event.target.id)}\n      >\n        Delete\n      </button>\n    </div>\n  );\n}\n\nContactListItem.propTypes = {\n  contact: PropTypes.exact({\n    name: PropTypes.string,\n    number: PropTypes.string,\n    id: PropTypes.string,\n  }).isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport ContactListItem from \"./ContactListItem\";\nimport s from \"./ContactList.module.css\";\n\nexport default function ContactList({ contacts, onDelete }) {\n  return (\n    <>\n      <ul className={s.list}>\n        {contacts.map((contact) => (\n          <ContactListItem\n            contact={contact}\n            onDelete={onDelete}\n            key={contact.id}\n          />\n        ))}\n      </ul>\n    </>\n  );\n}\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)).isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport { nanoid } from \"nanoid\";\nimport ContactForm from \"./components/ContactForm/\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\nimport s from \"./App.module.css\";\n\nclass App extends React.Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  visibleContacts = () =>\n    this.state.contacts.filter((contact) =>\n      contact.name\n        .toLowerCase()\n        .includes(this.state.filter.trim().toLowerCase())\n    );\n\n  onFormSubmit = (name, number) => {\n    if (this.state.contacts.some((contact) => contact.name === name)) {\n      alert(name + \" is already in contacts\");\n      return;\n    }\n    this.setState((prevState) => ({\n      contacts: [\n        ...prevState.contacts,\n        { name: name, number: number, id: nanoid() },\n      ],\n    }));\n  };\n\n  onDelete = (id) => {\n    this.setState({\n      contacts: this.state.contacts.filter((contact) => contact.id !== id),\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <h1 className={s.mainTitle}>Phonebook</h1>\n        <ContactForm onFormSubmit={this.onFormSubmit} />\n\n        <Filter filter={this.state.filter} changeFilter={this.changeFilter} />\n\n        <h2 className={s.title}>Contacts</h2>\n        <ContactList\n          contacts={this.visibleContacts()}\n          onDelete={this.onDelete}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}